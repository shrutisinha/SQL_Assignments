-- MySQL Script generated by MySQL Workbench
-- Tuesday 10 October 2017 08:50:49 AM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema IRCTC
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `IRCTC` ;

-- -----------------------------------------------------
-- Schema IRCTC
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `IRCTC` DEFAULT CHARACTER SET utf8 ;
USE `IRCTC` ;

-- -----------------------------------------------------
-- Table `IRCTC`.`train`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `IRCTC`.`train` ;

CREATE TABLE IF NOT EXISTS `IRCTC`.`train` (
  `train_id` INT NOT NULL,
  `train_name` VARCHAR(45) NOT NULL,
  `source` VARCHAR(45) NOT NULL,
  `destination` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`train_id`))
ENGINE = InnoDB
COMMENT = 'Strong Entity';


-- -----------------------------------------------------
-- Table `IRCTC`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `IRCTC`.`ticket` ;

CREATE TABLE IF NOT EXISTS `IRCTC`.`ticket` (
  `ticket_id` INT NOT NULL AUTO_INCREMENT,
  `ticket_price` INT NOT NULL,
  `from` VARCHAR(10) NOT NULL,
  `to` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`ticket_id`))
ENGINE = InnoDB
COMMENT = 'Weak Entity';


-- -----------------------------------------------------
-- Table `IRCTC`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `IRCTC`.`customer` ;

CREATE TABLE IF NOT EXISTS `IRCTC`.`customer` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(15) NOT NULL,
  `last_name` VARCHAR(15) NOT NULL,
  `age` INT(3) NOT NULL,
  `contact_no` DECIMAL(10) NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB
COMMENT = 'Strong Entity';


-- -----------------------------------------------------
-- Table `IRCTC`.`reserved_ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `IRCTC`.`reserved_ticket` ;

CREATE TABLE IF NOT EXISTS `IRCTC`.`reserved_ticket` (
  `ticket_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `train_id` INT NOT NULL,
  `start_time` DATETIME NOT NULL,
  `end_time` DATETIME NOT NULL,
  PRIMARY KEY (`ticket_id`),
  INDEX `fk_reserved_ticket_2_idx` (`customer_id` ASC),
  INDEX `fk_reserved_ticket_3_idx` (`train_id` ASC),
  CONSTRAINT `fk_reserved_ticket_1`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `IRCTC`.`ticket` (`ticket_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reserved_ticket_2`
    FOREIGN KEY (`customer_id`)
    REFERENCES `IRCTC`.`customer` (`customer_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reserved_ticket_3`
    FOREIGN KEY (`train_id`)
    REFERENCES `IRCTC`.`train` (`train_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `IRCTC`.`unreserved_ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `IRCTC`.`unreserved_ticket` ;

CREATE TABLE IF NOT EXISTS `IRCTC`.`unreserved_ticket` (
  `ticket_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`ticket_id`),
  INDEX `fk_unreserved_ticket_2_idx` (`customer_id` ASC),
  CONSTRAINT `fk_unreserved_ticket_1`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `IRCTC`.`ticket` (`ticket_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_unreserved_ticket_2`
    FOREIGN KEY (`customer_id`)
    REFERENCES `IRCTC`.`customer` (`customer_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `IRCTC`;

DELIMITER $$

USE `IRCTC`$$
DROP TRIGGER IF EXISTS `IRCTC`.`reserved_ticket_BEFORE_INSERT` $$
USE `IRCTC`$$
CREATE DEFINER = CURRENT_USER TRIGGER `IRCTC`.`reserved_ticket_BEFORE_INSERT` BEFORE INSERT ON `reserved_ticket` FOR EACH ROW
BEGIN
	IF(NEW.start_time < (SELECT reserved_ticket.end_time FROM reserved_ticket WHERE reserved_ticket.customer_id = NEW.customer_id))
		THEN SIGNAL SQLSTATE '45000';
		SET MESSAGE_TEXT = 'A customer cannot be in two trains at the same time.';
	END IF;

END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
