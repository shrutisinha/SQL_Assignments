-- MySQL Script generated by MySQL Workbench
-- Tuesday 10 October 2017 08:37:30 AM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema CabRentals
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `CabRentals` ;

-- -----------------------------------------------------
-- Schema CabRentals
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `CabRentals` DEFAULT CHARACTER SET utf8 ;
USE `CabRentals` ;

-- -----------------------------------------------------
-- Table `CabRentals`.`cabs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CabRentals`.`cabs` ;

CREATE TABLE IF NOT EXISTS `CabRentals`.`cabs` (
  `cab_no` INT NOT NULL,
  `cab_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cab_no`))
ENGINE = InnoDB
COMMENT = 'Weak Entity.';


-- -----------------------------------------------------
-- Table `CabRentals`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CabRentals`.`customer` ;

CREATE TABLE IF NOT EXISTS `CabRentals`.`customer` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(25) NOT NULL,
  `last_name` VARCHAR(25) NOT NULL,
  `email_id` VARCHAR(45) NOT NULL,
  `contact_no` VARCHAR(45) NOT NULL,
  `customer_rating` FLOAT NOT NULL DEFAULT 0.0,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB
COMMENT = 'Strong entity.';


-- -----------------------------------------------------
-- Table `CabRentals`.`driver`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CabRentals`.`driver` ;

CREATE TABLE IF NOT EXISTS `CabRentals`.`driver` (
  `driver_id` INT NOT NULL AUTO_INCREMENT,
  `driver_name` VARCHAR(45) NOT NULL,
  `contact_no` DECIMAL(10) NOT NULL,
  `driver_rating` FLOAT NOT NULL DEFAULT 0.0,
  PRIMARY KEY (`driver_id`))
ENGINE = InnoDB
COMMENT = 'Strong entity';


-- -----------------------------------------------------
-- Table `CabRentals`.`cab_driver`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CabRentals`.`cab_driver` ;

CREATE TABLE IF NOT EXISTS `CabRentals`.`cab_driver` (
  `cab_id` INT NULL,
  `driver_id` INT NOT NULL,
  PRIMARY KEY (`cab_id`),
  UNIQUE INDEX `driver_id_UNIQUE` (`driver_id` ASC),
  CONSTRAINT `fk_cab_driver_1`
    FOREIGN KEY (`cab_id`)
    REFERENCES `CabRentals`.`cabs` (`cab_no`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_cab_driver_2`
    FOREIGN KEY (`driver_id`)
    REFERENCES `CabRentals`.`driver` (`driver_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CabRentals`.`ride`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CabRentals`.`ride` ;

CREATE TABLE IF NOT EXISTS `CabRentals`.`ride` (
  `ride_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `cab_id` INT NOT NULL,
  `start_time` DATETIME NOT NULL,
  `end_time` DATETIME NOT NULL,
  `pickup` VARCHAR(45) NOT NULL,
  `drop` VARCHAR(45) NOT NULL,
  INDEX `fk_cab_customer_2_idx` (`customer_id` ASC),
  PRIMARY KEY (`ride_id`),
  UNIQUE INDEX `customer_time_idx` (`customer_id` ASC, `start_time` ASC),
  INDEX `fk_cab_customer_1_idx` (`cab_id` ASC),
  CONSTRAINT `fk_cab_customer_2`
    FOREIGN KEY (`customer_id`)
    REFERENCES `CabRentals`.`customer` (`customer_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_cab_customer_1`
    FOREIGN KEY (`cab_id`)
    REFERENCES `CabRentals`.`cabs` (`cab_no`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `CabRentals`;

DELIMITER $$

USE `CabRentals`$$
DROP TRIGGER IF EXISTS `CabRentals`.`ride_BEFORE_INSERT` $$
USE `CabRentals`$$
CREATE DEFINER = CURRENT_USER TRIGGER `CabRentals`.`ride_BEFORE_INSERT` BEFORE INSERT ON `ride` FOR EACH ROW
BEGIN
	IF(NEW.start_time < (SELECT ride.end_time FROM ride WHERE ride.customer_id = NEW.customer_id))
		THEN SIGNAL SQLSTATE '45000';
		SET MESSAGE_TEXT = 'One customer cannot be in more than one cab at the same time.';
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
