-- MySQL Script generated by MySQL Workbench
-- Tuesday 10 October 2017 03:00:10 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema imdb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `imdb` ;

-- -----------------------------------------------------
-- Schema imdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `imdb` DEFAULT CHARACTER SET utf8 ;
USE `imdb` ;

-- -----------------------------------------------------
-- Table `imdb`.`actors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`actors` ;

CREATE TABLE IF NOT EXISTS `imdb`.`actors` (
  `actor_id` INT NOT NULL AUTO_INCREMENT,
  `actors_name` VARCHAR(45) NOT NULL,
  `gender` VARCHAR(10) NOT NULL,
  `age` INT NOT NULL,
  PRIMARY KEY (`actor_id`))
ENGINE = InnoDB
COMMENT = 'Strong Entity';


-- -----------------------------------------------------
-- Table `imdb`.`genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`genre` ;

CREATE TABLE IF NOT EXISTS `imdb`.`genre` (
  `genre_id` INT NOT NULL AUTO_INCREMENT,
  `genre_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`genre_id`))
ENGINE = InnoDB
COMMENT = 'Strong Entity';


-- -----------------------------------------------------
-- Table `imdb`.`movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`movie` ;

CREATE TABLE IF NOT EXISTS `imdb`.`movie` (
  `movie_id` INT NOT NULL AUTO_INCREMENT,
  `genre_id` INT NOT NULL,
  `movie_name` VARCHAR(45) NOT NULL,
  `movie_description` VARCHAR(500) NOT NULL,
  `movie_rating` FLOAT NOT NULL,
  PRIMARY KEY (`movie_id`),
  INDEX `fk_movie_genre_idx` (`genre_id` ASC),
  CONSTRAINT `fk_movie_genre`
    FOREIGN KEY (`genre_id`)
    REFERENCES `imdb`.`genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Weak Entity';


-- -----------------------------------------------------
-- Table `imdb`.`tv_series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`tv_series` ;

CREATE TABLE IF NOT EXISTS `imdb`.`tv_series` (
  `tv_series_id` INT NOT NULL AUTO_INCREMENT,
  `genre_id` INT NOT NULL,
  `tv_series_name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(500) NOT NULL,
  `rating` FLOAT NOT NULL,
  PRIMARY KEY (`tv_series_id`),
  INDEX `fk_tv_series_genre_idx` (`genre_id` ASC),
  CONSTRAINT `fk_tv_series_genre`
    FOREIGN KEY (`genre_id`)
    REFERENCES `imdb`.`genre` (`genre_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Weak Entity';


-- -----------------------------------------------------
-- Table `imdb`.`actors_movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`actors_movie` ;

CREATE TABLE IF NOT EXISTS `imdb`.`actors_movie` (
  `movie_id` INT NOT NULL,
  `actor_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`, `actor_id`),
  INDEX `fk_actors_idx` (`actor_id` ASC),
  CONSTRAINT `fk_movie`
    FOREIGN KEY (`movie_id`)
    REFERENCES `imdb`.`movie` (`movie_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_actors`
    FOREIGN KEY (`actor_id`)
    REFERENCES `imdb`.`actors` (`actor_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`actors_tv_series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`actors_tv_series` ;

CREATE TABLE IF NOT EXISTS `imdb`.`actors_tv_series` (
  `tv_series_id` INT NOT NULL,
  `actor_id` INT NOT NULL,
  PRIMARY KEY (`tv_series_id`, `actor_id`),
  INDEX `fk_actors_idx` (`actor_id` ASC),
  CONSTRAINT `fk_tv_series`
    FOREIGN KEY (`tv_series_id`)
    REFERENCES `imdb`.`tv_series` (`tv_series_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_actors`
    FOREIGN KEY (`actor_id`)
    REFERENCES `imdb`.`actors` (`actor_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
