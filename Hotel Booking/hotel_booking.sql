-- MySQL Script generated by MySQL Workbench
-- Tuesday 10 October 2017 02:11:56 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema HotelBooking
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `HotelBooking` ;

-- -----------------------------------------------------
-- Schema HotelBooking
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `HotelBooking` DEFAULT CHARACTER SET utf8 ;
USE `HotelBooking` ;

-- -----------------------------------------------------
-- Table `HotelBooking`.`hotel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HotelBooking`.`hotel` ;

CREATE TABLE IF NOT EXISTS `HotelBooking`.`hotel` (
  `hotel_id` INT NOT NULL AUTO_INCREMENT,
  `hotel_name` VARCHAR(45) NOT NULL,
  `contact_no` DECIMAL(10) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`hotel_id`))
ENGINE = InnoDB
COMMENT = 'Strong Entity';


-- -----------------------------------------------------
-- Table `HotelBooking`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HotelBooking`.`customer` ;

CREATE TABLE IF NOT EXISTS `HotelBooking`.`customer` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `aadhar_no` MEDIUMTEXT NOT NULL,
  `contact_no` DECIMAL(10) NOT NULL,
  `loyal` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB
COMMENT = 'Strong Entity';


-- -----------------------------------------------------
-- Table `HotelBooking`.`booking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HotelBooking`.`booking` ;

CREATE TABLE IF NOT EXISTS `HotelBooking`.`booking` (
  `booking_id` INT NOT NULL,
  `hotel_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `booking_date` DATE NOT NULL,
  `no_of_days` INT NOT NULL,
  `price` INT NOT NULL,
  PRIMARY KEY (`booking_id`),
  INDEX `fk_booking_1_idx` (`hotel_id` ASC),
  INDEX `fk_booking_2_idx` (`customer_id` ASC),
  UNIQUE INDEX `customer_date_Unique` (`customer_id` ASC, `booking_date` ASC),
  CONSTRAINT `fk_booking_1`
    FOREIGN KEY (`hotel_id`)
    REFERENCES `HotelBooking`.`hotel` (`hotel_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_booking_2`
    FOREIGN KEY (`customer_id`)
    REFERENCES `HotelBooking`.`customer` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Weak Entity';

USE `HotelBooking`;

DELIMITER $$

USE `HotelBooking`$$
DROP TRIGGER IF EXISTS `HotelBooking`.`customer_BEFORE_INSERT` $$
USE `HotelBooking`$$
CREATE DEFINER = CURRENT_USER TRIGGER `HotelBooking`.`customer_BEFORE_INSERT` BEFORE INSERT ON `customer` FOR EACH ROW
BEGIN
	IF((SELECT count(booking.customer_id) FROM booking WHERE booking.customer_id = NEW.customer_id)>0)
		THEN UPDATE customer SET customer.loyal = 1 WHERE customer.customer_id = NEW.customer_id;
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
